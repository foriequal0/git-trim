GIT-TRIM(1)                                    General Commands Manual                                    GIT-TRIM(1)

NAME
       git-trim - Automatically trims your tracking branches whose upstream branches are merged or stray.

SYNOPSIS
       git-trim [FLAGS] [OPTIONS]

FLAGS
       -h, --help
              Prints help information

       --no-update
              Do not update remotes [config: trim.update]

       --no-confirm
              Do not ask confirm [config: trim.confirm]

       --no-detach
              Do not detach when HEAD is about to be deleted [config: trim.detach]

       --dry-run
              Do not delete branches, show what branches will be deleted

OPTIONS
       -b, --bases=bases
              Comma separated multiple names of branches. All the other branches are compared with the upstream
              branches of those branches. [default: branches that tracks `git symbolic-ref refs/remotes/*/HEAD`]
              [config: trim.bases]

              The default value is a branch that tracks `git symbolic-ref refs/remotes/*/HEAD`. They might not be
              reflected correctly when the HEAD branch of your remote repository is changed. You can see the changed
              HEAD branch name with `git remote show <remote>` and apply it to your local repository with `git remote
              set-head <remote> --auto`.

       -p, --protected=protected
              Comma separated multiple glob patterns (e.g. `release-*`, `feature/*`) of branches that should never be
              deleted. [config: trim.protected]

       --update-interval=update-interval
              Prevents too frequent updates. Seconds between updates in seconds. 0 to disable. [default: 5] [config:
              trim.updateInterval]

       -d, --delete=delete
              Comma separated values of `<delete range>[:<remote name>]`. Delete range is one of the `all, merged,
              local, remote, merged-local, merged-remote, stray, diverged`. You can scope a delete range to specific
              remote `:<remote name>` to a `delete range` when the delete range implies `merged-remote` or
              `diverged`. [default : `merged:origin`] [config: trim.delete]

              If there are delete ranges that are scoped, it trims remote branches only in the specified remote. If
              there are any delete range that isn`t scoped, it trims all remote branches.

              `all` implies `merged-local,merged-remote,stray-local,stray-remote`. `merged` implies
              `merged-local,merged-remote`. `local` implies `merged-local,stray-local`. `remote` implies
              `merged-remote,stray-remote`.

EXIT STATUS
       0      Successful program execution.

       1      Unsuccessful program execution.

       101    The program panicked.

                                                                                                          GIT-TRIM(1)
